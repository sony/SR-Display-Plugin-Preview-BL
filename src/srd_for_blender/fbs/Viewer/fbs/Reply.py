# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbs

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Reply(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Reply()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsReply(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Reply
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Reply
    def Code(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Reply
    def Message(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Start(builder): builder.StartObject(2)
def ReplyStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddCode(builder, code): builder.PrependInt32Slot(0, code, 0)
def ReplyAddCode(builder, code):
    """This method is deprecated. Please switch to AddCode."""
    return AddCode(builder, code)
def AddMessage(builder, message): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(message), 0)
def ReplyAddMessage(builder, message):
    """This method is deprecated. Please switch to AddMessage."""
    return AddMessage(builder, message)
def End(builder): return builder.EndObject()
def ReplyEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)