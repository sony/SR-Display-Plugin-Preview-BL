# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbs

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SetCameraAimLengthCommand(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SetCameraAimLengthCommand()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSetCameraAimLengthCommand(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # SetCameraAimLengthCommand
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SetCameraAimLengthCommand
    def AimLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def Start(builder): builder.StartObject(1)
def SetCameraAimLengthCommandStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddAimLength(builder, aimLength): builder.PrependFloat32Slot(0, aimLength, 0.0)
def SetCameraAimLengthCommandAddAimLength(builder, aimLength):
    """This method is deprecated. Please switch to AddAimLength."""
    return AddAimLength(builder, aimLength)
def End(builder): return builder.EndObject()
def SetCameraAimLengthCommandEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)